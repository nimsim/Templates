{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "exchangeDomainName": {
            "type": "string",
            "metadata": {
                "description": "Exchange domain - Make sure it is a domain you own"
            },
            "defaultValue": "domain.com"
        },
        "CreatedBy": {
            "type": "string",
            "metadata": {
                "description": "Type in the name of the person creating this resource"
            }
        },
        "CostCenter": {
            "type": "string",
            "metadata": {
                "description": "Type in the Cost Center of this resource"
            }
        },
        "exchangeStorageSizeInGB": {
            "type": "int",
            "metadata": {
                "description": "Exchange Mailbox storage size in GB."
            },
	    "defaultValue": 50
        }
    },	  
    "variables": {
        "exchangeVMCount": 1,
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "addressPrefix": "10.0.0.0/16",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "[tolower(concat('ip', resourceGroup().name))]",
        "publicIPAddressType": "Dynamic",
        "subnetPrefix": "10.0.0.0/24",
        "subnetName": "[tolower(concat('sn', resourceGroup().name))]",
        "uniqueDnsNameForPublicIP": "[tolower(concat('dns', resourceGroup().name))]",
        "uniqueStorageAccountName": "[tolower(concat('sa', resourceGroup().name))]",
        "uniqueStorageAccountContainerName": "[tolower(concat('sc', resourceGroup().name))]",
        "location": "[resourceGroup().location]",
        "vmOsSku": "2012-R2-Datacenter",
        "vmAdminUsername": "sdfadm",
        "vmAdminPassword": "k5ws2REYRRU%ae1u",
        "vmName": "[concat('vm', resourceGroup().name)]",
        "vmOsDiskName": "[concat('od', resourceGroup().name)]",
        "vmDataDiskName": "[concat('dd', resourceGroup().name)]",
        "vmSize": "Standard_DS3_v2",
        "vmDataDiskSize": "25",
        "vmNicName": "[tolower(concat('nc', resourceGroup().name))]",
        "virtualNetworkName": "[tolower(concat('vn', resourceGroup().name))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "modulesPath": "https://raw.githubusercontent.com/nimsim/Templates/master/Exchange/",
        "modulesExchange": "ExchangeWorkload.zip",
        "modulesUrlExchange": "[concat(variables('modulesPath'),variables('modulesExchange'))]",
        "modulesExchangeData": "ExchangeWorkload.psd1",
        "modulesUrlExchangeData": "[concat(variables('modulesPath'),variables('modulesExchangeData'))]",
        "configurationFunctionExchange": "ExchangeWorkload.ps1\\InstallAndConfigureExchange",
        "nsgName": "[tolower(concat('ng', resourceGroup().name))]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
	"loadbalancerName": "[tolower(concat('lb', resourceGroup().name))]",
	"rdpPort": "65221",
        "exchangeInstallerPath": "InstallerExchange",
        "exchangeISOUri": "https://download.microsoft.com/download/6/6/F/66F70200-E2E8-4E73-88F9-A1F6E3E04650/ExchangeServer2016-x64-cu11.iso",
        "modulesExchangeISODownload": "CSDownloadISO.ps1",
        "modulesUrlExchangeISODownload": "[concat(variables('modulesPath'),variables('modulesExchangeISODownload'))]"
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[tolower(variables('uniqueStorageAccountName'))]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            },
	  "tags": {
          "CostCenter": "[parameters('CostCenter')]",
          "CreatedBy": "[parameters('CreatedBy')]"
        }
      },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'))]",
            "location": "[variables('location')]",
            "copy": {
                "name": "publicIPLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('uniqueDnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ExchPorts",
                        "properties": {
			                "description": "Allowed ports by Microsoft",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
				    "443",
				    "80",
				    "587",
				    "65221",
				    "465",
				    "25"
			    ],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "dependsOn": [ "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]" ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgID')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmNicName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]",
		"[concat('Microsoft.Network/loadBalancers/',variables('loadbalancerName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigpublic",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName')))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
              		},
              		"loadBalancerBackendAddressPools": [
                	{
                  	"id": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('loadbalancerName'),'/backendAddressPools/LBBAP'))]"
                	}
              	       ],
              		"loadBalancerInboundNatRules": [
                	{
                  	"id": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('loadbalancerName'),'/inboundNatRules/rdp'))]"
                	}
              	      ]
                    }
		  }  
                ]
              }
            },
	{
      "apiVersion": "2018-08-01",
      "name": "[concat(variables('loadbalancerName'))]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [ 
          "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]" 
        ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName')))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers',concat(variables('loadbalancerName'),'/frontendIPConfigurations/LBFE'))]"
              },
              "protocol": "Tcp",
              "frontendPort": "[variables('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
     },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('uniqueStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('vmNicName'),copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[variables('vmAdminUsername')]",
                    "adminPassword": "[variables('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('vmOsSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmOsDiskName'),copyIndex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-0','.vhd')]"
                            },
                            "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-0')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "diskSizeGB": "[variables('vmDataDiskSize')]",
                            "lun": 0
                        },
                        {
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-1','.vhd')]"
                            },
                            "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-1')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "diskSizeGB": "[variables('vmDataDiskSize')]",
                            "lun": 1
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNicName'),copyIndex()))]"
                        }
                    ]
                }
            }
        },
		{
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/CustomScriptExtension')]",
            "location": "[variables('location')]",
            "copy": {
                "name": "customExtensionLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('modulesUrlExchangeISODownload')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('modulesExchangeISODownload'),' -uri ',variables('exchangeISOUri'),' -destination ',variables('exchangeInstallerPath'))]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/dscExtension')]",
            "location": "[variables('location')]",
            "copy": {
                "name": "extensionLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex(),'/extensions/','CustomScriptExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.15",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlExchange')]",
                    "configurationFunction": "[variables('configurationFunctionExchange')]",
                    "properties": {
                        "DomainName": "[parameters('exchangeDomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[variables('vmAdminUsername')]",
                            "password": "PrivateSettingsRef:vmAdminPassword"
                        },
                        "Location": "[variables('location')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "vmAdminPassword": "[variables('vmAdminPassword')]"
                    },
                    "DataBlobUri": "[variables('modulesUrlExchangeData')]"
                }
            }
        }
    ]
}
